# ---- Base Stage ----
# Use a specific Node.js version for consistency
FROM node:18-alpine AS base
WORKDIR /usr/src/app
# Install dependencies first to leverage Docker layer caching
COPY package*.json ./
RUN npm install --only=production
COPY . .

# ---- Build Stage ----
# This stage compiles the TypeScript code
FROM base AS build
WORKDIR /usr/src/app
RUN npm install
# If you have a shared tsconfig, you might need to adjust paths
RUN npx tsc -p apps/bot-equities/tsconfig.app.json --outDir dist

# ---- Production Stage ----
# This is the final, lean image that will be deployed
FROM node:18-alpine AS production
WORKDIR /usr/src/app
# Copy production dependencies from the 'base' stage
COPY --from=base /usr/src/app/node_modules ./node_modules
COPY package*.json ./
# Copy the compiled application code from the 'build' stage
COPY --from=build /usr/src/app/dist ./dist

# The command to run your NestJS application
CMD ["node", "dist/apps/bot-equities/src/main.js"]